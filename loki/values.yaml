global:
  image:
    repository: grafana/loki
    tag: 2.8.0
    pullPolicy: IfNotPresent

  persistence:
    enabled: true
    storageClass: ""
    accessModes: ["ReadWriteOnce"]
    size: 10Gi

loki:
  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095

    distributor:
      ring:
        kvstore:
          store: memberlist

    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
        final_sleep: 0s

    querier:
      query_timeout: 1m
      engine:
        timeout: 1m
      compactor_grpc_address: "loki-compactor:9095"  # Ensure this matches your compactor service name

    query_range:
      align_queries_with_step: true
      max_retries: 5
      parallelise_shardable_queries: true
      results_cache:
        cache:
          enable_fifocache: true
          fifocache:
            max_size_items: 1024
            validity: 24h

    compactor:
      working_directory: /var/loki/compactor
      shared_store: s3
      compaction_interval: 5m
      retention_enabled: true
      retention_delete_delay: 2h
      delete_request_store: s3

    schema_config:
      configs:
        - from: "2024-01-01"
          store: boltdb-shipper
          object_store: s3
          schema: v12
          index:
            prefix: index_
            period: 24h

    storage_config:
      aws:
        s3: s3://<your-access-key>:<your-secret-key>@s3.amazonaws.com/<your-bucket-name>
        region: us-east-1
        s3forcepathstyle: false
      boltdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        shared_store: s3

    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h

    chunk_store_config:
      max_look_back_period: 168h

    table_manager:
      retention_deletes_enabled: true
      retention_period: 336h

rbac:
  create: true
  pspEnabled: false

podDisruptionBudget:
  enabled: true
  minAvailable: 1

serviceAccount:
  create: true
  name: ""
  annotations: {}
  automountServiceAccountToken: true

components:
  distributor:
    replicas: 2
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi

  ingester:
    replicas: 3
    persistence:
      size: 50Gi
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

  querier:
    replicas: 2
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

  queryFrontend:
    replicas: 2
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 512Mi

  compactor:
    replicas: 1
    persistence:
      size: 100Gi
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 30s

service:
  type: ClusterIP
  ports:
    http: 3100
    grpc: 9095

gateway:
  enabled: true
  replicas: 2
  ingress:
    enabled: false
    hosts:
      - loki.example.com
    annotations:
      kubernetes.io/ingress.class: nginx

cache_config:
  enable_fifocache: true
  default_validity: 12h
  fifocache:
    max_size_bytes: 1GB
    validity: 6h

chunk_store_config:
  max_look_back_period: 168h
  chunk_cache_config:
    enable_fifocache: true
    fifocache:
      max_size_bytes: 500MB

networkPolicy:
  enabled: false

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

grafana:
  dashboard:
    enabled: true
    namespace: monitoring
    labels:
      grafana_dashboard: "1"
    configMap:
      name: loki-grafana-dashboard
      annotations: {}
    json: |
      {
        "title": "Loki Logs Monitoring",
        "description": "Comprehensive dashboard for Loki logs",
        "editable": true,
        "panels": [
          {
            "title": "Log Volume",
            "type": "graph",
            "datasource": "Loki",
            "targets": [
              {
                "expr": "sum(rate({job=~\"$application\"}[5m])) by (level)",
                "legendFormat": "{{level}}"
              }
            ],
            "gridPos": { "h": 8, "w": 12, "x": 0, "y": 0 }
          },
          {
            "title": "Error Rate",
            "type": "stat",
            "datasource": "Loki",
            "targets": [
              {
                "expr": "sum(rate({job=~\"$application\"} |~ \"error|fail|fatal\" [5m]))",
                "legendFormat": "Errors"
              }
            ],
            "gridPos": { "h": 8, "w": 12, "x": 12, "y": 0 }
          },
          {
            "title": "Log Explorer",
            "type": "logs",
            "datasource": "Loki",
            "targets": [
              {
                "expr": "{job=~\"$application\"}",
                "refId": "A"
              }
            ],
            "gridPos": { "h": 12, "w": 24, "x": 0, "y": 8 }
          }
        ],
        "templating": {
          "list": [
            {
              "name": "application",
              "query": "label_values(loki_log_messages_total, job)",
              "refresh": 1,
              "type": "query"
            }
          ]
        }
      }

s3:
  enabled: true
  endpoint: s3.amazonaws.com
  region: us-east-1
  bucketNames:
    chunks: loki-chunks
    ruler: loki-ruler
    admin: loki-admin
  s3ForcePathStyle: false
  useIAM: false
  accessKeyId: "<YOUR_ACCESS_KEY_ID>"
  secretAccessKey: "<YOUR_SECRET_ACCESS_KEY>"
  secretName: loki-s3-credentials
